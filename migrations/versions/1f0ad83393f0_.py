"""empty message

Revision ID: 1f0ad83393f0
Revises: 
Create Date: 2018-08-29 17:00:52.338692

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1f0ad83393f0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('migrate_version')
    op.add_column('inventory', sa.Column('available_quantity', sa.Integer()))
    op.add_column('inventory', sa.Column('connector', sa.String()))
    op.alter_column('inventory', 'date_updated',
               existing_type=postgresql.TIMESTAMP())
    op.alter_column('inventory', 'dimension_one',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('inventory', 'dimension_two',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('inventory', 'location',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('inventory', 'notes',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('inventory', 'price',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('inventory', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('inventory', 'shape',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('inventory', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('inventory_history', sa.Column('inventory_id', sa.Integer()))
    op.alter_column('inventory_history', 'date_updated', existing_type=postgresql.TIMESTAMP())
    op.alter_column('inventory_history', 'operation',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('inventory_history', 'quantity',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_foreign_key(None, 'inventory_history', 'inventory', ['inventory_id'], ['id'])
    op.drop_column('inventory_history', 'item_id')
    op.create_unique_constraint(None, 'inventory_txt', ['info'])
    op.alter_column('user', 'hash',
               existing_type=sa.VARCHAR())
    op.alter_column('user', 'username',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('user', 'validated',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'validated',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user', 'username',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user', 'hash',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'inventory_txt', type_='unique')
    op.add_column('inventory_history', sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'inventory_history', type_='foreignkey')
    op.alter_column('inventory_history', 'quantity',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inventory_history', 'operation',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inventory_history', 'date_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('inventory_history', 'inventory_id')
    op.alter_column('inventory', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inventory', 'shape',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inventory', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('inventory', 'price',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('inventory', 'notes',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inventory', 'location',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inventory', 'dimension_two',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inventory', 'dimension_one',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inventory', 'date_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('inventory', 'connector')
    op.drop_column('inventory', 'available_quantity')
    op.create_table('migrate_version',
    sa.Column('repository_id', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('repository_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('repository_id', name='migrate_version_pkey')
    )
    # ### end Alembic commands ###
